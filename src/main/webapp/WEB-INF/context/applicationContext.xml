<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
	xmlns:ehcache="http://www.springmodules.org/schema/ehcache"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jee="http://www.springframework.org/schema/jee"	
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-2.5.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
	http://www.springmodules.org/schema/ehcache
	http://www.springmodules.org/schema/cache/springmodules-ehcache.xsd
	http://www.springframework.org/schema/jee 
	http://www.springframework.org/schema/jee/spring-jee-2.0.xsd">

	<!-- 
	 | CACHE CONFIGURATION
	 +-->
	
	<!-- EHCache Configuration -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation">
			<value>classpath:ehcache.xml</value>
		</property>
	</bean>
	
	<!-- Main calendar cache -->
	<bean id="calendarCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"
		p:cacheManager-ref="cacheManager" p:cacheName="calendarCache"/>


	<!-- 
	 | CAS PROXY AUTHENTICATION CONFIGURATION
	 +-->
	
	<!-- Ticket validation filter -->
	<bean id="ticketValidationFilter" 
		class="org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter"
		p:serverName="${portal.server.base.url}" p:redirectAfterValidation="false"
		p:proxyReceptorUrl="/proxy/receptor" p:ticketValidator-ref="ticketValidator"
		p:proxyGrantingTicketStorage-ref="proxyGrantingTicketStorage"/>
	
	<!-- CAS proxy ticket validator -->
	<bean id="ticketValidator" 
		class="org.jasig.cas.client.validation.Cas20ProxyTicketValidator"
		p:proxyCallbackUrl="${portal.server.base.url}/${portlet.context}/proxy/receptor" 
		p:proxyGrantingTicketStorage-ref="proxyGrantingTicketStorage"
		p:acceptAnyProxy="true">
		<constructor-arg index="0" value="${cas.server.base.url}" />
	</bean>
	
	<!-- CAS Proxy service bean -->
	<bean id="casTicketService" class="org.jasig.portlet.cas.CASProxyTicketServiceUserInfoImpl"
		p:serviceUrl="${portal.server.base.url}/${portlet.context}" 
		p:ticketValidator-ref="ticketValidator"/>
	
	<bean id="proxyGrantingTicketStorage" 
		class="org.jasig.cas.client.proxy.ProxyGrantingTicketStorageImpl"/>


	<!-- 
	 | HIBERNATE CONFIGURATION
	 +-->
	
	<bean id="calendarStore" parent="abstractStoreTransactionProxy"
		p:target-ref="calendarStoreTarget"/>
	
	<bean id="calendarStoreTarget"
		class="org.jasig.portlet.calendar.dao.HibernateCalendarStore"
		parent="abstractHibernateTemplate"/>
	
	<bean id="abstractStoreTransactionProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true" p:transactionManager-ref="transactionManager">
		<property name="transactionAttributes">
			<props>
				<prop key="create*">PROPAGATION_REQUIRED</prop>
				<prop key="store*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
                <prop key="init*">PROPAGATION_REQUIRED</prop>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop> 
			</props>
		</property>
	</bean>
	
	<bean id="abstractHibernateTemplate" abstract="true" p:sessionFactory-ref="sessionFactory"/>
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory"/>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource" p:configLocation="classpath:hibernate.cfg.xml"/>
	
	<bean id="dataSource" 
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="${hibernate.connection.driver_class}"
		p:url="${hibernate.connection.url}"
		p:username="${hibernate.connection.username}"
		p:password="${hibernate.connection.password}"/>

	<!--jee:jndi-lookup id="dataSource" jndi-name="db/LiferayDb" resource-ref="true" /-->


	<!-- 
	 | GENERAL PORTLET CONFIGURATION
	 +-->
		
	<!-- Properties configuration -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		lazy-init="false">
		<property name="locations">
			<list>
				<value>classpath:datasource.properties</value>
				<value>classpath:configuration.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- Message source for this context, loaded from localized "messages_xx" files -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basenames="messages"/>

	<bean class="org.jasig.web.service.AjaxPortletSupportService"/>
	
	<bean id="stringCleaningUtil" 
		class="org.jasig.portlet.calendar.util.StringCleaningUtil"
		p:securityFile="classpath:clean-html.xml"/>

    <!-- Regexes of mobile device user agents -->
    <util:list id="mobileDeviceRegexes">
        <value>.*iPhone.*</value>
        <value>.*Android.*</value>
        <value>.*Safari.*Pre.*</value>
        <value>.*Nokia.*AppleWebKit.*</value>
    </util:list>
		
    <!-- 
     | View resolvers, look for a named view bean before going to JSP resolution
     +-->
    <bean class="org.springframework.web.servlet.view.XmlViewResolver"
            p:order="0" p:location="/WEB-INF/context/views.xml"/>

	<!-- JSP view resolver -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:order="10" p:cache="true" p:viewClass="org.springframework.web.servlet.view.JstlView"
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/>
	
	<bean id="modelPasser" class="org.jasig.web.util.DefaultModelPasser"/>
		
	<!-- Abstract Default Exception Handler Bean -->
	<bean id="defaultExceptionHandlerTemplate"
		class="org.springframework.web.portlet.handler.SimpleMappingExceptionResolver"
		abstract="true">
		<property name="defaultErrorView" value="defError"/>
		<property name="exceptionMappings">
			<props>
				<prop key="javax.portlet.PortletSecurityException">notAuthorized</prop>
				<prop key="javax.portlet.UnavailableException">notAvailable</prop>
			</props>
		</property>
	</bean>

</beans>
